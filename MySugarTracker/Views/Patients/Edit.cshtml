@model MySugarTracker.ViewModels.PatientUser

@{
    ViewBag.Title = "Edit";
}

<h2>Patient Information and Glucose Chart for @Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName)</h2>
<hr />
<div style="width:100%; height:500px;">@(Model.MyChart)</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    

    <div class="form-horizontal">
        

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserID)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.FirstName)
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.LastName)
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="CardioVascularDisease">History of Cardiovascular Disease?</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CardioVascularDisease)
                    @Html.ValidationMessageFor(model => model.CardioVascularDisease, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="HighBloodPressure">History of High Blood Pressure?</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HighBloodPressure)
                    @Html.ValidationMessageFor(model => model.HighBloodPressure, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="ThyroidDisease">History of Thyroid Disease?</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ThyroidDisease)
                    @Html.ValidationMessageFor(model => model.ThyroidDisease, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Female">Gender</label>
            <div class="col-md-10">
                <div class="checkbox">
                    <select class="list-box tri-state" id="Female" name="Female">
                        <option value="">Not Set</option>
                        <option value="True">Female</option>
                        <option value="False">Male</option>

                        @{if (Model.Female == true)
                          {<option selected="selected" value="True">Female</option>;
                          }
                          else
                          {<option selected="selected" value="False">Male</option>;
                          }
}
                    </select>
                    <span class="field-validation-valid text-danger" data-valmsg-for="Female" data-valmsg-replace="true"></span>
                </div>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Pregnant, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Pregnant)
                    @Html.ValidationMessageFor(model => model.Pregnant, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailPref, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.EmailPref)
                    @Html.ValidationMessageFor(model => model.EmailPref, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SMSPref, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SMSPref)
                    @Html.ValidationMessageFor(model => model.SMSPref, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LowAlert, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LowAlert, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LowAlert, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HighAlert, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HighAlert, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HighAlert, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TestTime1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TestTime1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TestTime1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TestTime2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TestTime2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TestTime2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TestTime3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TestTime3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TestTime3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TestTime4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TestTime4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TestTime4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WeightInPounds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WeightInPounds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WeightInPounds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HeightInInches, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HeightInInches, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HeightInInches, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="   Save Changes    " class="btn btn-default" href="../Patient/Edit"/>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Return to Patient List" class="btn btn-default" href="../Doctor/Index" />
            </div>
        </div>
    </div>

    
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
